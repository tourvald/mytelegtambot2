import os
import json
import random
import unicodedata
from telethon import TelegramClient
from telethon.errors import SessionPasswordNeededError
from telethon.tl.functions.messages import GetHistoryRequest
import asyncio

# –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ
api_id = 9389967          # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à api_id
api_hash = 'a701b1d0675674c9ba7b5d05a76d15ae'    # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à api_hash
phone_number = '+79263816112'  # –í —Ñ–æ—Ä–º–∞—Ç–µ '+1234567890'
chat_id = 1573843884             # ID —á–∞—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å


# –í—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
polling_interval = 10

# –ü–æ–ª—É—á–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–∫—Ä–∏–ø—Ç
script_dir = os.path.dirname(os.path.abspath(__file__))

# –§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π (–ø–æ–ª–Ω—ã–π –ø—É—Ç—å)
reactions_file = os.path.join(script_dir, 'reactions.json')

# –§–∞–π–ª —Å –æ—Ç–≤–µ—Ç–∞–º–∏ (–ø–æ–ª–Ω—ã–π –ø—É—Ç—å)
messages_file = os.path.join(script_dir, 'messages.txt')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏–π –∏–∑ —Ñ–∞–π–ª–∞
def load_reactions():
    if os.path.exists(reactions_file):
        try:
            with open(reactions_file, 'r', encoding='utf-8') as file:
                reactions = json.load(file)
                return reactions
        except json.JSONDecodeError:
            return {}
    else:
        return {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π –≤ —Ñ–∞–π–ª
def save_reactions(reactions):
    with open(reactions_file, 'w', encoding='utf-8') as file:
        json.dump(reactions, file, ensure_ascii=False, indent=4)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —Ñ–∞–π–ª–∞ messages.txt
def load_messages():
    if os.path.exists(messages_file):
        try:
            with open(messages_file, 'r', encoding='utf-8') as file:
                lines = [line.strip() for line in file if line.strip()]
                return lines
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ messages.txt: {e}")
            return []
    else:
        print("–§–∞–π–ª messages.txt –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return []

async def main():
    client = TelegramClient('session_name', api_id, api_hash)
    await client.start()

    if not await client.is_user_authorized():
        try:
            await client.send_code_request(phone_number)
            code = input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞–º –≤ Telegram: ')
            await client.sign_in(phone_number, code)
        except SessionPasswordNeededError:
            password = input('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ')
            await client.sign_in(password=password)

    print(f"–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ —Å ID: {chat_id}")

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    me = await client.get_me()
    my_user_id = me.id

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞
    previous_reactions = load_reactions()

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç–≤–µ—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞ messages.txt
    messages_list = load_messages()
    if not messages_list:
        print("–°–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ –ø—É—Å—Ç. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª messages.txt —Å–æ–¥–µ—Ä–∂–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É.")
        return

    while True:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —á–∞—Ç–∞
            history = await client(GetHistoryRequest(
                peer=chat_id,
                offset_id=0,
                offset_date=None,
                add_offset=0,
                limit=100,
                max_id=0,
                min_id=0,
                hash=0
            ))

            # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
            my_messages = [msg for msg in history.messages if msg.sender_id == my_user_id][:10]

            for message in my_messages:
                message_id = str(message.id)

                if message.reactions:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ä–µ–∞–∫—Ü–∏–π
                    reactions = {}
                    for reaction in message.reactions.results:
                        if hasattr(reaction.reaction, 'emoticon'):
                            emoji = reaction.reaction.emoticon
                        else:
                            emoji = 'unknown'

                        reactions[emoji] = reaction.count

                    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    prev_reactions = previous_reactions.get(message_id, {})

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–≤—ã–µ –∏–ª–∏ —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏
                    for emoji, count in reactions.items():
                        prev_count = prev_reactions.get(emoji, 0)
                        if count > prev_count:
                            # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                            emoji_normalized = unicodedata.normalize('NFKD', emoji)
                            if emoji_normalized == 'ü§°':
                                # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏–∑ messages_list
                                random_message = random.choice(messages_list)
                                print(f"{random_message}")
                            else:
                                print(f"–ù–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ID {message_id} –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–µ–∞–∫—Ü–∏—è '{emoji}': –≤—Å–µ–≥–æ {count}")

                    # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
                    previous_reactions[message_id] = reactions

                else:
                    # –ï—Å–ª–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ—Ç —Ä–µ–∞–∫—Ü–∏–π, –Ω–æ —Ä–∞–Ω–µ–µ –±—ã–ª–∏, —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
                    if message_id in previous_reactions:
                        del previous_reactions[message_id]

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ –≤ —Ñ–∞–π–ª
            save_reactions(previous_reactions)

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")

        # –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –æ–ø—Ä–æ—Å–æ–º
        await asyncio.sleep(polling_interval)

if __name__ == '__main__':
    asyncio.run(main())